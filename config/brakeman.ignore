{
  "ignored_warnings": [
    {
      "warning_type": "Cross-Site Request Forgery",
      "warning_code": 7,
      "fingerprint": "b5774d21ea475ca65a2589e83898ea1571a5ce810e3715f8af7fb9638057b842",
      "check_name": "ForgerySetting",
      "message": "'protect_from_forgery' should be called in InternalApiController",
      "file": "app/controllers/internal_api_controller.rb",
      "line": 2,
      "link": "http://brakemanscanner.org/docs/warning_types/cross-site_request_forgery/",
      "code": null,
      "render_path": null,
      "location": {
        "type": "controller",
        "controller": "InternalApiController"
      },
      "user_input": null,
      "confidence": "High",
      "note": ""
    },
    {
      "warning_type": "SSL Verification Bypass",
      "warning_code": 71,
      "fingerprint": "fcd6d876d77ab745b6d968b6e91bd07a4390469664220843227a10672aad89f4",
      "check_name": "SSLVerify",
      "message": "SSL certificate verification was bypassed",
      "file": "lib/velum/suse_connect.rb",
      "line": 133,
      "link": "http://brakemanscanner.org/docs/warning_types/ssl_verification_bypass/",
      "code": "Net::HTTP.start(URI.join(@smt_url, endpoint).hostname, URI.join(@smt_url, endpoint).port, :open_timeout => 2, :use_ssl => (URI.join(@smt_url, endpoint).scheme == \"https\"), :verify_mode => (OpenSSL::SSL::VERIFY_NONE))",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Velum::SUSEConnect",
        "method": "perform_request"
      },
      "user_input": null,
      "confidence": "High",
      "note": ""
    }
  ],
  "updated": "2018-10-29 13:55:47 +0100",
  "brakeman_version": "3.5.0"
}
